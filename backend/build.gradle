plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'nl.wilcokas'
version = '6.13.0-beta'
description = 'LuckyStackWorker'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    // IMPORTANT: local maven repo still needed because of parallelIterativeDeconvolution which depends on a lib called parallelcolt:0.11.4 that is not available on Maven Central.
}

dependencies {
    implementation libs.org.springframework.boot.spring.boot.starter
    implementation libs.org.springframework.boot.spring.boot.starter.web
    implementation libs.commons.io.commons.io
    implementation libs.org.apache.velocity.velocity.engine.core
    implementation libs.org.apache.commons.commons.text
    implementation libs.net.imagej.ij
    implementation libs.org.yaml.snakeyaml
    implementation libs.com.fasterxml.jackson.datatype.jackson.datatype.jsr310
    implementation libs.io.github.stevenjwest.paralleliterativedeconvolution

    // Lombok for main
    compileOnly libs.org.projectlombok.lombok
    annotationProcessor libs.org.projectlombok.lombok

    // Lombok for tests
    testCompileOnly libs.org.projectlombok.lombok
    testAnnotationProcessor libs.org.projectlombok.lombok

    // Testing
    testImplementation libs.org.springframework.boot.spring.boot.starter.test

}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.generatedSourceOutputDirectory.set(file("$buildDir/generated/sources/annotations"))
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
